---
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import type { EducationData } from "@/types";
import { Image } from "astro:assets";
import Certificate from "@/components/icons/Certificate.astro";
import CodeIcon from "@/components/icons/CodeIcon.astro";
import Building from "@/components/icons/Building.astro";
import CalendarIcon from "@/components/icons/CalendarIcon.astro";
import Award from "@/components/icons/Award.astro";
import Chevron from "@/components/icons/Chevron.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const bachelorData: EducationData = Astro.props.bachelorData;
const index = Astro.props.index;
---

<div
  class="relative flex flex-col items-center w-[340px] sm:w-[436px] rounded-lg px-3 py-3 gap-y-4 bg-cardBackground-light dark:bg-cardBackground-dark"
>
  <a
    class:list={[
      "absolute top-3 right-3 cursor-pointer rounded-full p-1 hover:opacity-90 hover:scale-105 transition bg-button-light dark:bg-button-dark",
      {
        hidden: !bachelorData.certificate,
      },
    ]}
    target="_blank"
    href={bachelorData.certificate}
    aria-label={t("acc.certificateBut")}
  >
    <Certificate class="size-7 text-headline-dark" />
  </a>
  <Image
    class="size-32 sm:size-36 rounded-full object-center"
    src={bachelorData.image}
    alt={bachelorData.name}
    loading="eager"
  />
  <h2 class="text-lg xs:text-xl sm:text-2xl font-bold text-tertiary-light dark:text-tertiary-dark">
    {bachelorData.name}
  </h2>
  {bachelorData.additionalInfo && (
      <button
        btn-card-id={index}
        class="expandButton cursor-pointer rounded-full p-1 rotate-0 hover:opacity-90 hover:scale-105 transition bg-button-light dark:bg-button-dark"
        aria-label={t("acc.moreInfo")}
      >
        <Chevron class="size-5 text-headline-dark" />
      </button>
    <div
      id=`additionalInfo-${index}`
      class="hidden flex-row items-center gap-x-10 border-t w-full pt-2 text-headline-light dark:text-headline-dark border-headline-light dark:border-headline-dark"
  >
    <div class="flex flex-col opacity-0 gap-y-2 summaryContent">
      <span class="inline-flex items-center text-xs sm:text-base">
        <CodeIcon class="size-4 sm:size-5 text-tertiary-light dark:text-tertiary-dark" />:
        {bachelorData.additionalInfo.specialty}
      </span>
      <span class="inline-flex items-center text-xs sm:text-base">
        <Building class="size-4 sm:size-5 text-tertiary-light dark:text-tertiary-dark" />:
        {bachelorData.additionalInfo.university}
      </span>
      <span class="inline-flex items-center text-xs sm:text-base">
        <CalendarIcon
          class="size-4 sm:size-5 text-tertiary-light dark:text-tertiary-dark"
        />:
        {bachelorData.additionalInfo.date}
      </span>
      <span class="inline-flex items-center text-xs sm:text-base">
        <Award class="size-4 sm:size-5 text-tertiary-light dark:text-tertiary-dark" />:
        {bachelorData.additionalInfo.honor}
      </span>
    </div>
    <div
      class="relative size-12 sm:size-20 overflow-hidden rounded-full border-2 border-headline-light dark:border-headline-dark summaryAverage"
    >
      <div
        class="absolute size-full bg-secondary-light dark:bg-secondary-dark wave"
      >
      </div>
      <div
        class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-lg sm:text-2xl font-bold z-10"
      >
        {bachelorData.additionalInfo.average}
      </div>
    </div>
  </div>
  )}
 
</div>

<style>
  .summaryContent {
    transform: translateX(-20px);
    opacity: 0;
    animation: fadeRight 0.75s ease-out forwards;
  }

  .summaryAverage {
    transform: translateY(-30px);
    opacity: 0;
    animation: fadeDown 0.75s ease-out forwards;
    animation-delay: 0.75s;
  }

  @keyframes fadeRight {
    0% {
      transform: translateX(-20px);
      opacity: 0;
    }
    100% {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes fadeDown {
    0% {
      transform: translateY(-30px);
      opacity: 0;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }

  .wave {
    animation: wave-animation 4s ease-in-out infinite;
  }

  @keyframes wave-animation {
    0%,
    100% {
      clip-path: polygon(
        0 12%,
        15% 19%,
        28% 22%,
        42% 22%,
        58% 20%,
        73% 16%,
        86% 13%,
        100% 15%,
        100% 100%,
        0% 100%
      );
    }
    50% {
      clip-path: polygon(
        0 24%,
        16% 21%,
        29% 19%,
        43% 16%,
        55% 18%,
        70% 20%,
        86% 19%,
        100% 16%,
        100% 100%,
        0% 100%
      );
    }
  }
</style>

<script>
  const expandButton = document.querySelectorAll(".expandButton");

  document.addEventListener("DOMContentLoaded", () => {
    expandButton.forEach((button) => {
      button.addEventListener("click", () => {
        const cardId = button.getAttribute("btn-card-id");

        const additionalInfo = document.querySelector(
          "#additionalInfo-" + cardId
        );

        const rotated = additionalInfo.classList.contains("flex");
        if (rotated) {
          button.classList.remove("rotate-180");
          button.classList.add("rotate-0");

          additionalInfo.classList.remove("flex");
          additionalInfo.classList.add("hidden");
        } else {
          button.classList.remove("rotate-0");
          button.classList.add("rotate-180");

          additionalInfo.classList.add("flex");
          additionalInfo.classList.remove("hidden");
        }
      });
    });
  });
</script>
